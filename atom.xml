<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[4679's Blog]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="https://4679.space/"/>
  <updated>2015-12-09T06:51:03.972Z</updated>
  <id>https://4679.space/</id>
  
  <author>
    <name><![CDATA[4679kun]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[服务器后端切换到H2O]]></title>
    <link href="https://4679.space/h2o/"/>
    <id>https://4679.space/h2o/</id>
    <published>2015-12-05T04:20:53.000Z</published>
    <updated>2015-12-09T06:51:03.972Z</updated>
    <content type="html"><![CDATA[<p>H2O是一款轻量 配置简单 的HTTP服务器 特色就是HTTP/2</p>
<p>Archlinux用户直接从AUR安装就可以了<br>其他系统请自行寻找源或者编译安装</p>
<p>下面是我的配置文件 可以当个示范<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">access-log: /dev/null &#10;error-log: /dev/null &#10;pid-file: /var/run/h2o.pid&#10;max-connections: 51200&#10;file.send-gzip: ON &#10;tcp-fastopen: 3 &#10;user: www&#10;http2-reprioritize-blocking-assets: ON &#10;file.index: [ &#39;index.php&#39;, &#39;index.html&#39; ]&#10;file.mime.addtypes: &#10;    text/html: .html .htm .shtml&#10;    text/css: .css&#10;    text/xml: .xml&#10;    image/gif: .gif&#10;    image/jpeg: .jpeg .jpg&#10;    application/javascript: .js&#10;    application/atom+xml: .atom&#10;    application/rss+xml: .rss&#10;&#10;    text/mathml: .mml&#10;    text/plain: .txt&#10;    text/vnd.sun.j2me.app-descriptor: .jad&#10;    text/vnd.wap.wml: .wml&#10;    text/x-component: .htc&#10;&#10;    image/png: .png&#10;    image/tiff: .tif .tiff&#10;    image/vnd.wap.wbmp: .wbmp&#10;    image/x-icon: .ico&#10;    image/x-jng: .jng&#10;    image/x-ms-bmp: .bmp&#10;    image/svg+xml: .svg .svgz&#10;    image/webp: .webp&#10;&#10;    application/font-woff: .woff&#10;    application/java-archive: .jar .war .ear&#10;    application/json: .json&#10;    application/mac-binhex40: .hqx&#10;    application/msword: .doc&#10;    application/pdf: .pdf&#10;    application/postscript: .ps .eps .ai&#10;    application/rtf: .rtf&#10;    application/vnd.apple.mpegurl: .m3u8&#10;    application/vnd.ms-excel: .xls&#10;    application/vnd.ms-fontobject: .eot&#10;    application/vnd.ms-powerpoint: .ppt&#10;    application/vnd.wap.wmlc: .wmlc&#10;    application/vnd.google-earth.kml+xml: .kml&#10;    application/vnd.google-earth.kmz: .kmz&#10;    application/x-7z-compressed: .7z&#10;    application/x-cocoa: .cco&#10;    application/x-java-archive-diff: .jardiff&#10;    application/x-java-jnlp-file: .jnlp&#10;    application/x-makeself: .run&#10;    application/x-perl: .pl .pm&#10;    application/x-pilot: .prc .pdb&#10;    application/x-rar-compressed: .rar&#10;    application/x-redhat-package-manager: .rpm&#10;    application/x-sea: .sea&#10;    application/x-shockwave-flash: .swf&#10;    application/x-stuffit: .sit&#10;    application/x-tcl: .tcl .tk&#10;    application/x-x509-ca-cert: .der .pem .crt&#10;    application/x-xpinstall: .xpi&#10;    application/xhtml+xml: .xhtml&#10;    application/xspf+xml: .xspf&#10;    application/zip: .zip&#10;&#10;    application/octet-stream: .bin .exe .dll&#10;    application/octet-stream: .deb&#10;    application/octet-stream: .dmg&#10;    application/octet-stream: .iso .img&#10;    application/octet-stream: .msi .msp .msm&#10;&#10;    application/vnd.openxmlformats-officedocument.wordprocessingml.document: .docx&#10;    application/vnd.openxmlformats-officedocument.spreadsheetml.sheet: .xlsx&#10;    application/vnd.openxmlformats-officedocument.presentationml.presentation: .pptx&#10;&#10;    audio/midi: .mid .midi .kar&#10;    audio/mpeg: .mp3&#10;    audio/ogg: .ogg&#10;    audio/x-m4a: .m4a&#10;    audio/x-realaudio: .ra&#10;&#10;    video/3gpp: .3gpp .3gp&#10;    video/mp2t: .ts&#10;    video/mp4: .mp4&#10;    video/mpeg: .mpeg .mpg&#10;    video/quicktime: .mov&#10;    video/webm: .webm&#10;    video/x-flv: .flv&#10;    video/x-m4v: .m4v&#10;    video/x-mng: .mng&#10;    video/x-ms-asf: .asx .asf&#10;    video/x-ms-wmv: .wmv&#10;    video/x-msvideo: .avi&#10;&#10;hosts:&#10;  &#34;4679.space:443&#34;: &#10;    header.add: &#34;strict-transport-security: max-age=39420000; includesubdomains; preload&#34; &#10;    header.add: &#34;X-Frame-Options: SAMEORIGIN&#34;&#10;    header.add: &#34;X-Content-Type-Options: nosniff&#34;&#10;    header.add: &#34;X-XSS-Protection: 1; mode=block&#34;&#10;    listen:&#10;      port: 443&#10;      ssl:&#10;        certificate-file: /etc/letsencrypt/live/4679.space/fullchain.pem&#10;        key-file: /etc/letsencrypt/live/4679.space/privkey.pem&#10;        dh-file: /etc/ssl/certs/dhparam2048.pem&#10;        minimum-version: TLSv1&#10;        cipher-preference: server&#10;        cipher-suite: CHACHA20 EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS !RC4&#10;    paths:&#10;      /:&#10;        file.dir: /home/www/&#10;&#10;  &#34;4679.space:80&#34;:&#10;    listen:&#10;      port: 80&#10;    paths:&#10;      /:&#10;        redirect:&#10;          status: 301&#10;          url: &#34;https://4679.space/&#34;</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>H2O是一款轻量 配置简单 的HTTP服务器 特色就是HTTP/2</p>
<p>Archlinux用户直接从AUR安装就可以了<br>其他系统请自行寻找源或者编译安装</p>
<p>下面是我的配置文件 可以当个示范<br><figure class="highlight"]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[Let's Encrypt试用笔记]]></title>
    <link href="https://4679.space/lets-encrypt/"/>
    <id>https://4679.space/lets-encrypt/</id>
    <published>2015-12-04T05:27:52.000Z</published>
    <updated>2015-12-09T06:51:03.955Z</updated>
    <content type="html"><![CDATA[<p>昨天 也就是12月3日 Let’s Encrypt项目正式启动了Public Beta 这意味着以后每个人都能用上免费的SSL证书这实在是一件大好事 下面是我的试用体验</p>
<p>首先 我们要获取Let’s Encrypt的客户端<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/letsencrypt/letsencrypt</span><br><span class="line"><span class="built_in">cd</span> letsencrypt</span><br></pre></td></tr></table></figure></p>
<p>之后就可以签发证书了</p>
<p>首先 获得root权限<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su</span><br></pre></td></tr></table></figure></p>
<p>之后 停掉占用了80和443端口的web服务器<br>这里取决于各位使用的操作系统与web服务器 我用的是Archlinux+Nginx<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop nginx</span><br></pre></td></tr></table></figure></p>
<p>然后就是签发证书了 （不支持泛域名）<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./letsencrypt-auto <span class="operator">-d</span> 你的域名 certonly</span><br></pre></td></tr></table></figure></p>
<p>等待一阵过后 你的证书就在<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/letsencrypt/live/你的域名/</span><br></pre></td></tr></table></figure></p>
<p>里面等着你了 赶快修改你的服务器配置文件来使用它吧</p>
<p>最后上一张效果图<br><img src="https://dn-4679kun.qbox.me/Screenshot_20151204-131901.png" alt="效果图"> </p>
<p>PS:证书的有效期是3个月 记得续签哦</p>
<p>感谢Mozilla以及项目赞助者还有开发者们为了给我们带来更安全的互联网所做出的贡献！</p>
<p>本文是我在午睡的时候睡不着用48元包邮的渣想BKC600蓝牙键盘写下的 手感还不错:-)<br><img src="https://dn-4679kun.qbox.me/IMG_20151204_132028.jpg" alt="BKC600"> </p>
]]></content>
    <summary type="html">
    <![CDATA[<p>昨天 也就是12月3日 Let’s Encrypt项目正式启动了Public Beta 这意味着以后每个人都能用上免费的SSL证书这实在是一件大好事 下面是我的试用体验</p>
<p>首先 我们要获取Let’s Encrypt的客户端<br><figure class="h]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[使用net-speeder缓解vps高延迟 高丢包率]]></title>
    <link href="https://4679.space/net-speeder/"/>
    <id>https://4679.space/net-speeder/</id>
    <published>2015-12-04T02:50:51.000Z</published>
    <updated>2015-12-09T06:51:03.954Z</updated>
    <content type="html"><![CDATA[<p>net-speeder是一款开源软件 能显著降低丢包率 原理简单粗暴 就是每个包发两遍 所以 使用的流量也会翻一倍 这就要靠大家取舍了</p>
<p><a href="https://github.com/snooda/net-speeder" target="_blank" rel="external">项目地址</a> </p>
<p>首先安装依赖 libnet， libpcap<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -Sy libnet libpcap</span><br></pre></td></tr></table></figure></p>
<p>每个发行版安装方法都不同 就不一一说明了</p>
<p>之后就是获取源代码了<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/snooda/net-speeder</span><br><span class="line"><span class="built_in">cd</span> net-speeder</span><br></pre></td></tr></table></figure></p>
<p>然后编译</p>
<p>vps架构是openvz的<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh build.sh -DCOOKED</span><br></pre></td></tr></table></figure></p>
<p>vps是Xen,KVM或者是物理机的<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh build.sh</span><br></pre></td></tr></table></figure></p>
<p>编译完成后 就可以运行了</p>
<p>首先获取root权限<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su</span><br></pre></td></tr></table></figure></p>
<p>使用方法<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./net_speeder 网卡名 加速规则（bpf规则)</span><br></pre></td></tr></table></figure></p>
<p>最简单的使用方法（对于OpenVZ）<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"> ./net_speeder venet0 <span class="string">"ip"</span></span><br></pre></td></tr></table></figure></p>
<p>ping一下看看效果吧:-)</p>
<p>PS:对SS也有效哦</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>net-speeder是一款开源软件 能显著降低丢包率 原理简单粗暴 就是每个包发两遍 所以 使用的流量也会翻一倍 这就要靠大家取舍了</p>
<p><a href="https://github.com/snooda/net-speeder" target="_blank]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[利用阿里的免费服务器中转SS加速]]></title>
    <link href="https://4679.space/ss-speedup/"/>
    <id>https://4679.space/ss-speedup/</id>
    <published>2015-12-03T12:09:44.000Z</published>
    <updated>2015-12-09T06:51:03.914Z</updated>
    <content type="html"><![CDATA[<p><strong>转载 <a href="http://xuqk.tk/251" target="_blank" rel="external">原文</a></strong> </p>
<p>在国外的vps上架设的SS 难免会掉包 高延迟  目前比较不错的解决办法是用国内的高质量服务器进行转发<br>财大气粗的阿里为我们提供了免费的服务器</p>
<p>前面的步骤直接看原文吧</p>
<p>需要说明的地方是配置文件那部分</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">global&#10;&#9;ulimit-n 51200&#10;defaults&#10;&#9;log global&#10;&#9;mode tcp&#10;&#9;option dontlognull&#10;&#9;timeout connect 1000&#10;&#9;timeout client 150000&#10;&#9;timeout server 150000&#10;frontend ss-in&#10;&#9;bind *:8080&#10;&#9;default_backend ss-out&#10;backend ss-out&#10;&#9;server server1 SS&#26381;&#21153;&#22120;IP:SS&#31471;&#21475;&#21495; maxconn 20480</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p><strong>转载 <a href="http://xuqk.tk/251" target="_blank" rel="external">原文</a></strong> </p>
<p>在国外的vps上架设的SS 难免会掉包 高延迟  目前比较不错的解决办法是用国内的高]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[祝自己生日快乐]]></title>
    <link href="https://4679.space/birthday/"/>
    <id>https://4679.space/birthday/</id>
    <published>2015-12-01T16:12:01.000Z</published>
    <updated>2015-12-09T06:51:03.965Z</updated>
    <content type="html"><![CDATA[<p>一转眼就十七岁了 时间过得真快</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>一转眼就十七岁了 时间过得真快</p>
]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[用Openshift架设自己的贴吧签到站]]></title>
    <link href="https://4679.space/sign/"/>
    <id>https://4679.space/sign/</id>
    <published>2015-12-01T05:56:08.000Z</published>
    <updated>2015-12-09T06:51:03.892Z</updated>
    <content type="html"><![CDATA[<p><a href="https://sign.4679.space" target="_blank" rel="external">现成的 不想动手的就用这个吧</a> </p>
<p>首先 我们得去注册个Openshift的账号 这个应该不用详细写了 大家应该都会</p>
<p>登陆到控制台之后<br><img src="https://dn-4679kun.qbox.me/sign/1.png" alt="Image"> </p>
<p>点击大大的蓝色按钮<br><img src="https://dn-4679kun.qbox.me/sign/2.png" alt="Image"> </p>
<p>搜索cacti 点击它<br><img src="https://dn-4679kun.qbox.me/sign/3.png" alt="Image"> </p>
<p>上面的输入框是域名地址 自己想一个 下面的输入框里面换成<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/puteulanus/tieba-sign-install3</span><br></pre></td></tr></table></figure></p>
<p>这里感谢创世神域写的安装脚本 <a href="http://www.puteulanus.com/archives/572" target="_blank" rel="external">原地址</a><br><img src="https://dn-4679kun.qbox.me/sign/4.png" alt="Image"></p>
<p>Create!</p>
<p>完成以后就可以访问你刚才设定的地址了<br><img src="https://dn-4679kun.qbox.me/sign/5.png" alt="Image"></p>
<p>选不<br><img src="https://dn-4679kun.qbox.me/sign/6.png" alt="Image"></p>
<p>下面三项填好 完成<br><img src="https://dn-4679kun.qbox.me/sign/7.png" alt="Image"></p>
<p>搭建好了<br><img src="https://dn-4679kun.qbox.me/sign/8.png" alt="Image"></p>
<p>记得添加帐号之后要刷新贴吧列表哦</p>
]]></content>
    <summary type="html">
    <![CDATA[<p><a href="https://sign.4679.space" target="_blank" rel="external">现成的 不想动手的就用这个吧</a> </p>
<p>首先 我们得去注册个Openshift的账号 这个应该不用详细写了 大家应该都会</p>
]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[转投Hexo]]></title>
    <link href="https://4679.space/move-to-hexo/"/>
    <id>https://4679.space/move-to-hexo/</id>
    <published>2015-11-05T16:55:31.000Z</published>
    <updated>2015-12-09T06:51:03.935Z</updated>
    <content type="html"><![CDATA[<p>迁移到了Hexo 感觉不错</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>迁移到了Hexo 感觉不错</p>
]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[自购VPS搭建Shadowsocks服务器]]></title>
    <link href="https://4679.space/ss/"/>
    <id>https://4679.space/ss/</id>
    <published>2015-11-05T15:24:52.000Z</published>
    <updated>2015-12-09T06:51:03.926Z</updated>
    <content type="html"><![CDATA[<p>好多丧尸都在求指导 我觉得还是写一篇教程比较好(=ﾟωﾟ)=</p>
<p>首先是vps的购买 网上有很多指导挑选vps的网站 丧尸们可以挑选一款适合自己的 我用的是cheapvz的洛杉矶vps 年付75人民币 支持支付宝付款</p>
<ol>
<li>单核cpu</li>
<li>256mb内存 15G硬盘</li>
<li>100Mbps带宽</li>
<li>每月500G流量</li>
</ol>
<p>这个价格能买到这种配置也不错了 架个ss 开个小网站还是没问题的</p>
<p>下面是购买的步骤</p>
<p>首先麻烦丧尸们先访问一下我的推荐链接 这样你们购买了之后我还能获得一点佣金<br><a href="https://www.cheapvz.com/aff.php?aff=42" target="_blank" rel="external">https://www.cheapvz.com/aff.php?aff=42</a></p>
<p>然后这是选购的链接 先把币种切换成CNY 也就是人民币 然后点击立即购买就行啦<br><a href="https://www.cheapvz.com/cart.php?gid=2" target="_blank" rel="external">https://www.cheapvz.com/cart.php?gid=2</a></p>
<p>之后就是填写一些表格 这里我只对某些选项说明一下 其他的大家一看就懂<br>首先是<br><img src="https://dn-4679kun.qbox.me/2015/10/3544733802.png" alt="1.png"><br>第一项是服务器名 大家随便取一个就行 我的是4679-vps<br>第二项和第三项就填 ns1 ns2<br>第四项root密码 之后登录服务器的时候会用到 </p>
<p>之后是选择操作系统<br><img src="https://dn-4679kun.qbox.me/2015/10/3036577624.png" alt="9.png"><br>第二项就是选择操作系统了 我用的是ubuntu_14.04 x86_64<br>建议大家也选择这个 因为下文用到的一键安装脚本是用于ubuntu和debian的</p>
<p>其他填好之后就是结账了<br><img src="https://dn-4679kun.qbox.me/2015/10/2193416289.png" alt="3.png"><br>付款完成以后<br><img src="https://dn-4679kun.qbox.me/2015/10/1113179179.png" alt="4.png"><br>稍等一会 你的邮箱里就会收到一封邮件 里面就有你的vps的ip地址啦</p>
<p>接下来下载putty 用来连接服务器<br><a href="https://github.com/larryli/PuTTY/releases/download/putty-0.65cn/putty-0.65cn.zip" target="_blank" rel="external">https://github.com/larryli/PuTTY/releases/download/putty-0.65cn/putty-0.65cn.zip</a><br>下载完成后解压 打开putty.exe<br><img src="https://dn-4679kun.qbox.me/2015/10/3378522319.png" alt="5.png"><br>在主机名称处填入ip 然后点击打开<br>之后会出现一个命令行窗口 显示 login as:<br>输入root 回车 之后是输入刚才设定的root密码 输入的时候是没有显示的 输入完回车就行</p>
<p>不出意外的话 就能连接上服务器了<br><img src="https://dn-4679kun.qbox.me/2015/10/23040430.png" alt="6.png"></p>
<p>现在就可以安装shadowsocks了<br>我使用的是秋水逸冰大大的一键安装脚本 <a href="https://teddysun.com/358.html" target="_blank" rel="external">原文地址</a></p>
<p>首先安装依赖（复制之后点击右键就是粘贴）<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install build-essential autoconf libtool libssl-dev gawk debhelper</span><br></pre></td></tr></table></figure></p>
<p>输入y 确认安装</p>
<p>然后输入第一条命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget --no-check-certificate https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks-libev-debian.sh</span><br></pre></td></tr></table></figure></p>
<p>完成以后输入第二条<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x shadowsocks-libev-debian.sh</span><br></pre></td></tr></table></figure></p>
<p>之后是第三条<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./shadowsocks-libev-debian.sh <span class="number">2</span>&gt;&amp;<span class="number">1</span> | tee shadowsocks-libev-debian.log</span><br></pre></td></tr></table></figure></p>
<p>输入第三条命令以后 会提示设置ss的密码<br><img src="https://dn-4679kun.qbox.me/2015/10/3543099494.png" alt="7.png"><br>输入密码然后回车<br>之后是设置端口<br>输入要设置的端口号然后回车</p>
<p>之后就会开始安装了<br><img src="https://dn-4679kun.qbox.me/2015/10/3798456288.png" alt="8.png"></p>
<p>等待 安装完成后系统就会给出服务器的地址 端口 密码 加密方式 你就有属于自己的ss服务器了</p>
<p>完结撒花(＾o＾)ﾉ请原谅我全程没用一个标点</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>好多丧尸都在求指导 我觉得还是写一篇教程比较好(=ﾟωﾟ)=</p>
<p>首先是vps的购买 网上有很多指导挑选vps的网站 丧尸们可以挑选一款适合自己的 我用的是cheapvz的洛杉矶vps 年付75人民币 支持支付宝付款</p>
<ol>
<li>单核cpu</li>]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[用黑魔法把任意系统的vps变成Arch]]></title>
    <link href="https://4679.space/vps2arch/"/>
    <id>https://4679.space/vps2arch/</id>
    <published>2015-11-05T15:19:11.000Z</published>
    <updated>2015-12-09T06:51:03.883Z</updated>
    <content type="html"><![CDATA[<p>  作为一个有信仰的人 当然在哪都要用Arch vps也是 然而大部分vps提供商都不会有Arch这种“不稳定”的系统供我们选择 这怎么能忍<br>于是我找啊找 没想到真找到了办法</p>
<p><a href="https://github.com/drizzt/vps2arch" target="_blank" rel="external">https://github.com/drizzt/vps2arch</a></p>
<p>就是它 使用方法很简单</p>
<p><strong>注意！这会清除vps上的所有数据</strong></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget http://git.io/vps2arch</span><br><span class="line">chmod +x vps2arch</span><br><span class="line">su</span><br><span class="line">./vps2arch</span><br></pre></td></tr></table></figure>
<p>就这四条命令 经过一小会等待之后 安装就完成了</p>
<p>然后配置好软件源 执行<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sync ; reboot <span class="operator">-f</span></span><br></pre></td></tr></table></figure></p>
<p>vps就会重启 然后再次连上ssh 就能享受Arch啦</p>
<p>PS:</p>
<pre><code>1. 不保证一切顺利
2. 这是一份测试过的vps的列表 [这里][3] 我在CheapVZ的vps里也测试过了
3. ipv6暂时还不能自动配置 有需要的请手动配置
4. base-devel组不会自动安装 需要自己装
5. 觉得棒的话 可以考虑捐助作者
6. 没了
</code></pre>]]></content>
    <summary type="html">
    <![CDATA[<p>  作为一个有信仰的人 当然在哪都要用Arch vps也是 然而大部分vps提供商都不会有Arch这种“不稳定”的系统供我们选择 这怎么能忍<br>于是我找啊找 没想到真找到了办法</p>
<p><a href="https://github.com/drizzt/vps2]]>
    </summary>
    
  </entry>
  
</feed>
